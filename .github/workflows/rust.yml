name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.53.0
        components: clippy, rustfmt
        default: true
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libxcb-shape0-dev libxcb-xfixes0-dev

    - name: Build binary
      run: |
        cargo build --verbose --release
    - name: Run tests
      run: |
        cargo test --verbose

    - name: Run clippy
      uses: actions-rs/clippy-check@v1.0.7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-targets -- -D warnings
    - name: Check formatting
      run: |
        cargo fmt --all -- --check

    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: leafish-linux
        path: target/release/leafish
    - name: Release binary
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          leafish*

  windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.53.0
          components: clippy, rustfmt
          default: true

      - name: Build binary
        run: |
          cargo build --verbose --release
      - name: Run tests
        run: |
          cargo test --verbose

      - name: Run clippy
        uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets -- -D warnings
      - name: Check formatting
        run: |
          cargo fmt --all -- --check

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: leafish.exe
          path: target/release/leafish.exe
      - name: Release binary
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/leafish.exe

  macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.53.0
          components: clippy, rustfmt
          default: true

      - name: Build binary
        run: |
          cargo build --verbose --release
          chmod a+x target/release/leafish
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.14
      - name: Run tests
        run: |
          cargo test --verbose

      - name: Run clippy
        uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets -- -D warnings
      - name: Check formatting
        run: |
          cargo fmt --all -- --check

      - name: Package binary
        run: |
          cargo install cargo-bundle
          cargo bundle --release
          chmod a+x target/release/bundle/osx/Leafish.app/Contents/MacOS/leafish
          cd target/release/bundle/osx
      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: Leafish.app
          path: target/release/bundle/osx/Leafish.app
      - name: Release binary
        if: startsWith(github.ref, 'refs/tag/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/bundle/osx/Leafish.app
